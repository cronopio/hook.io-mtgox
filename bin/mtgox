#!/usr/bin/env node

var MtgoxHook = require('../lib/mtgox').MtgoxHook;

var hook = new MtgoxHook({
  name: 'mtgox',
  debug: false
});


hook.on('children::ready', function(){

  hook.lastPrice = 0;

  hook.on('subscribe', function(data){
    console.log('Subscribed to channel: '.green, getChannel(data.channel).name.magenta);
  });

  hook.on('private', function(data){
    console.log('private'.magenta, data);
  });

  hook.on('trade', function(data){
    hook.lastPrice = data.trade.price;
    console.log('trade'.magenta, data);
  });

  hook.on('depth', function(data){
    renderChange(data);
  });

  hook.on('ticker', function(data){
    renderTicker(data,hook.lastPrice);
  });

});

hook.start();


var getChannel = function(key){
  var selected = hook.channels.filter(function(c){
    if (c.key === key)
      return true;
    return false;
  });
  return selected[0];
};

var getTime = function(){
  var now = new Date();
  var time = '['+now.getHours()+':'+now.getMinutes()+':'+now.getSeconds()+'] ';
  return time.blue;
}

var renderChange = function(depth){
  var vol, action
      data = depth.depth,
      msg = getTime();
  if (data.volume < 0){
    // An order has been deleted
    msg += 'Removed '.grey;
    vol = (data.volume * -1).toString();
  } else {
    // An order has been created
    msg += 'Created '.grey;
    vol = data.volume;
  }
  msg += data.type_str.bold;
  msg += ' '+vol.yellow + ' @ '.italic + data.price.green;
  console.log(msg);
};


/*
,
showMsg: function(data){
  var ch = this.getChannel(data.channel);
  this['_'+ch.private](data);
},
_depth: function(depth){
  var vol,
      now  = new Date(),
      data = depth.depth,
      msg = '<'+now.getHours()+':'+now.getMinutes()+':'+now.getSeconds()+'> ';
  if (data.volume < 0){
    // An order has been deleted
    msg += 'Remove ';
    vol = data.volume * -1;
  } else {
    // An order has been created
    msg += 'Create ';
    vol = data.volume;
  }
  msg += data.type_str + ' ' +vol + ' @ ' + data.price;
  console.log(msg);
},
_trade: function(trade){
  var data = trade.trade,
      time = new Date(data.date),
      msg = '['+time.getHours()+':'+time.getMinutes()+':'+time.getSeconds()+'] ';
  if (data.trade_type == 'ask'){
    msg += 'Sell ';      
  } else if (data.trade_type == 'bid'){
    msg += 'Buy ';
  }
  msg += data.amount + ' '+data.item+ '  @  '+data.price+' '+data.price_currency;
  if (data.price > this.lastTrade){
    msg += ' ⇧ ';
  }
  if (data.price < this.lastTrade){
    msg += ' ⇩ ';
  }
  this.lastTrade = data.price;
  console.log(msg);
},
*/


var renderTicker = function(tick,last){
  var data = tick.ticker;
  
  var lineOne = '   Volume: ' + data.vol.toString().red;
  lineOne += ' Last Price: ' + last.toString().green.bold;
  
  var lineTwo = '   Buy: ' + data.buy.toString().bold;
  lineTwo += ' Sell: ' + data.sell.toString().bold;
  
  var lineThree = ' |  Max: ' + data.high.toString().italic;
  lineThree += ' Min: ' + data.low.toString().italic;
  
  console.log(lineOne);
  console.log(lineTwo,lineThree);
}
